<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ include file="$(ProjectDir)\CodeGeneration\MultipleOutputHelper.ttinclude" #>
<#@ output extension=".txt" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="$(ProjectDir)\bin\hosting.dll"#>
<#@ assembly name="$(ProjectDir)\bin\Voodoo.dll"#>
<#
var outputFolder = "Controllers";
var walker = new Hosting.CodeGeneration.CodeWalker();
var manager = Manager.Create(Host, GenerationEnvironment);

foreach (var resource in walker.Resources)
{
	manager.StartNewFile(resource.Name + "Controller.cs"); 
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using Voodoo;
namespace <#= resource.Namespace #>
{
	public class <#= resource.ClassName #> : ApiController
	{
		<# foreach(var verb in resource.Verbs) {#>

		<#=verb.Attribute#>
		public <#=verb.ResponseTypeName#> <#=verb.Name#>
			(<#=verb.Parameter#> <#=verb.RequestTypeName#> request)
			{
				var op = new <#=verb.OperationTypeName#>(request);
				var response = op.Execute();
				return response;
			}

<#}#>
	}
}
<#
manager.EndBlock(); 	
}
    

manager.Process(true);
#>

